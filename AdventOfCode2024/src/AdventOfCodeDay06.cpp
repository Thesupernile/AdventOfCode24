// AdventOfCodeDay6.cpp : This file contains the 'main' function. Program execution begins and ends there.
//
#include <iostream>
#include <vector>
#include <map>

// Data
std::string testMap[] = {
"......##...#...#....#.......#....................##............#.#..#.......#.........................................#...........",
"..................................#.............#................................#..........##..................#.................",
"....#......................#................#...........................................#....................................#....",
"............#..............#...#...#...............#..........#.#....#..........................#....##...........................",
"....#.............#.....#.....................................................................#...#..........................#....",
".................#............#......................#.................#.............#..................#.........................",
"................#...............#....................#...#..#...#.#.....................................................#.........",
"..............#.#...............................................................#....................#.......#....................",
".............#...#..#............................#..............#..#.........................................#....................",
".........................#.........#..#.......#...#..............#..#..............................#.........#............#.......",
"#...............................................................................................................#.................",
"..........................#.....#.........................#...................#.......#.........................#.................",
"...........#...........#........#........................#..........#.#.................#........#............#...............#...",
"..#..#................#...................................................#..................................................#....",
".....#............................#..........................................................................#....................",
"................#.....#...........................#..........................................#.........#........................#.",
"..#...........................................##............#.........#..........................#.......................#.....#..",
".....................#.............#.....#.......#.##.....#......................................#.#..#.#.........................",
".......#...##.....#..........#...............#....#..........................#..............................................##....",
"..#.......#..................##..............#..........................#.#....#....#....................#.#.#...............#....",
"....................#.......#.......#............#..............#.......#.........#...#.....#........#.#..........................",
"...............................................#.....#........................................#..#.........#..........#...........",
"............#...#.............................................................................#.......##..........................",
"##..........................#...........................#..............................#..........................................",
"..............................................#.............................................#.................................#...",
".............#..............#................##...........#...............#.......................................................",
"......#............#.......#..#....#.............................................................................#.#..............",
"..#..##..#..................#...............................................##......#........................................#....",
"..#...............................#.#........#................................................#.....#........#.#..................",
".........#.......#.....................................#............................#..............................#..............",
"..........................................................................................................#.....................#.",
"....................#......................................#..........................#.........................##................",
"........#..............................................................................#.#..................#..................#..",
"........................................................^..#...................#....#..............##.............................",
"..#.#........................................................#..#..................#.....................................#....#...",
".........................#....#............................#......................................................................",
".#......#.............................................................................................#....................###....",
"...........#...#.#............#........................................................................#..........................",
"......#..........#.............................#.#.................................#...#.............#.#........................#.",
"...............................................#..........#.......#.........#........................................#.#..........",
".................#.....................#.......#..................................................................................",
".#...............#.........#...................#..............#........................#.....#....................................",
"...........#..............#..................................................................#...................................#",
".................#.............#...........#.......................................#......................#......#..........#.....",
"........#..#.................#..........#....................................................#.....#...........#.................#",
".....................#..#.................#......#......#..#..#..........#........................#...........................##..",
".................#........#....#.................................................#.#.........................#............#..#....",
".....................#...............##...................#.....#..#............................#.#.............#.................",
".#..#......##...............#.......#..........................................................................#......#...........",
"#..#...................................#.#................#.....#.................................#...........................#...",
"..............#............................#............#...#...#.............#..........#............#...#............#..........",
"..........##.................#................................#...........#.#....#...............................................#",
"......#...........#.............#..........#.............#............#...................#.......................#...............",
"..............#.......#...........................................................................................................",
"...#................................................................#...............................#....#...............#........",
"...#..##................#..............................................................................#..........##.#............",
".#........#..........#..................#......................#...........#......................................................",
"....#.......................#...#...........................................#..................#...............................#..",
".............................#...........#..........#.................#.....................................................#.....",
"...........#.........#............#...............................#................#..............#.........................#.....",
"..........#........#.....#.....................................#.................#.....................................#..#.......",
"...#.......#...................................................................#.................#................................",
".#....#........#..............................#........#.....#........#..#...#.#......................#..........................#",
".....................................................................#....................#.......................................",
".............................#..............................#.#....................................................#............#.",
"..#.....#.......#.......#......................#.#.#.........................................................#.....#........#.....",
"...............#..........#..#....#..................#..........................................#.................................",
"............#...................#................#.............................................................................#..",
"........#...#......................................##....................#..................#..........##............#...#........",
"......................#......#......#.#.........................................................................#.............#...",
"........#......................................................................................#.................#................",
".................................................#....................#..............##.......................................#..#",
".............#..........................................................#.................#..........................#....#......#",
"......................#.....................#............................#..................#...........#.........................",
"#..............#...........................#...#.#................................................................................",
".......#............................#...........................................................#...............#.................",
"........................#..................................................................................#......................",
"...................#..........................#.........#........#...........................#....................................",
".............#............#.......................................................................................##....#.........",
"................#.........#.....................................................................................................#.",
"........#.............................#.................................#.......##..............#............................#....",
"#........#.....#.....#.......#...............................#....................................................#..............#",
"........................#.............................#.....#...........#........#............#...................................",
"..................#...........#...#.............................................................................#...............#.",
"...................#..................#...................#..............................#....#...........#..............#........",
"...............#................#.#....................#.........#.........#.............#.........#......#..................#....",
"..................#.............................#...........................#....#....#......#..#.#....................#..........",
"...#.......................................#...............................................................#................#.....",
"...................#.........................................................#....................................................",
".................#..............................#.................................................................................",
".............#.......#...#....................................................#........#....................................#...#.",
"..............#...................#.#..........#....................................................#....#...#.##....#............",
"........#..#...........................................#.........#...#...............#.........................#..................",
"#.....#...........................................#.................................................#.............................",
"#...........................................#..........#..........................................#...............#...............",
"............................#.................................................#...#...............................................",
".#...................#.......................................................................................#......#...##..#.....",
".....#..#...............#........#....#.........#........................#.............#..........................................",
"...................#................#........................................#.#..................................................",
"......#.#...........................#...................#..........#..........#......#............................................",
"..........................#.#..............#............#.#.......................................................................",
"...#..#........................#..............................................#..#...#.....#........#.............................",
"..........................#.....................#.........................................................#............#.#........",
"............................#.....................#.............#.................................................................",
"..........................................#..#.................................................................#......#.#.#.......",
"..........##......................................#................................##....................#..#.....................",
"..............#.......................................................#...........................................................",
"..........#........#........................................................................................#........#...#........",
"......................#.#...................#...............#.....#......................#.....#.......#.......#..........#.......",
"......#..#....#..................#.........................................#......................................................",
"...............#.....#..#..........................................##.........................................##.............#....",
".....................#..................#..................................#...................#............................#.#...",
"..#................#..#................................................#...........#..........#.............#...................#.",
".......#.............#.......................................................................#...#.........................##..#..",
"...#...................#..................#.............#..#.........................................#........##..................",
".................................#...........#........#.....................#.........................#..#........................",
".......#..................#..................................#......................................#.#....................#......",
"..................................................................................#...........#....#.......#......#..........#....",
"........##.........................................................#.......................#........#............#................",
"...#...............##.#..................#....................................#.............#.................#...................",
"..................##.........#...................#......#................#......................................................#.",
".#....................#............#..............#.............#.........#........................................#......#..#....",
"...............#...........................................................#........................#.............#...............",
"#............................#...................#...............................##..#...............#..........................#.",
"................#.............#..........#.........#..........................#....#..............................#..............#",
"...................................#.........................................#....................................................",
"....#................................................................#.#..#..........#....#.............................#.........",
"...........#.............#..........#........#...#...#........#.............#.......................................##............",
".........#.......................#..........#....#.......................................#.....#...#.#..........#.................",
".......................#...........#.......#......#.#...............................................#.................#.#........."
};

std::string testMapPart2[] = {
"......##...#...#....#.......#....................##............#.#..#.......#.........................................#...........",
"..................................#.............#................................#..........##..................#.................",
"....#......................#................#...........................................#....................................#....",
"............#..............#...#...#...............#..........#.#....#..........................#....##...........................",
"....#.............#.....#.....................................................................#...#..........................#....",
".................#............#......................#.................#.............#..................#.........................",
"................#...............#....................#...#..#...#.#.....................................................#.........",
"..............#.#...............................................................#....................#.......#....................",
".............#...#..#............................#..............#..#.........................................#....................",
".........................#.........#..#.......#...#..............#..#..............................#.........#............#.......",
"#...............................................................................................................#.................",
"..........................#.....#.........................#...................#.......#.........................#.................",
"...........#...........#........#........................#..........#.#.................#........#............#...............#...",
"..#..#................#...................................................#..................................................#....",
".....#............................#..........................................................................#....................",
"................#.....#...........................#..........................................#.........#........................#.",
"..#...........................................##............#.........#..........................#.......................#.....#..",
".....................#.............#.....#.......#.##.....#......................................#.#..#.#.........................",
".......#...##.....#..........#...............#....#..........................#..............................................##....",
"..#.......#..................##..............#..........................#.#....#....#....................#.#.#...............#....",
"....................#.......#.......#............#..............#.......#.........#...#.....#........#.#..........................",
"...............................................#.....#........................................#..#.........#..........#...........",
"............#...#.............................................................................#.......##..........................",
"##..........................#...........................#..............................#..........................................",
"..............................................#.............................................#.................................#...",
".............#..............#................##...........#...............#.......................................................",
"......#............#.......#..#....#.............................................................................#.#..............",
"..#..##..#..................#...............................................##......#........................................#....",
"..#...............................#.#........#................................................#.....#........#.#..................",
".........#.......#.....................................#............................#..............................#..............",
"..........................................................................................................#.....................#.",
"....................#......................................#..........................#.........................##................",
"........#..............................................................................#.#..................#..................#..",
"........................................................^..#...................#....#..............##.............................",
"..#.#........................................................#..#..................#.....................................#....#...",
".........................#....#............................#......................................................................",
".#......#.............................................................................................#....................###....",
"...........#...#.#............#........................................................................#..........................",
"......#..........#.............................#.#.................................#...#.............#.#........................#.",
"...............................................#..........#.......#.........#........................................#.#..........",
".................#.....................#.......#..................................................................................",
".#...............#.........#...................#..............#........................#.....#....................................",
"...........#..............#..................................................................#...................................#",
".................#.............#...........#.......................................#......................#......#..........#.....",
"........#..#.................#..........#....................................................#.....#...........#.................#",
".....................#..#.................#......#......#..#..#..........#........................#...........................##..",
".................#........#....#.................................................#.#.........................#............#..#....",
".....................#...............##...................#.....#..#............................#.#.............#.................",
".#..#......##...............#.......#..........................................................................#......#...........",
"#..#...................................#.#................#.....#.................................#...........................#...",
"..............#............................#............#...#...#.............#..........#............#...#............#..........",
"..........##.................#................................#...........#.#....#...............................................#",
"......#...........#.............#..........#.............#............#...................#.......................#...............",
"..............#.......#...........................................................................................................",
"...#................................................................#...............................#....#...............#........",
"...#..##................#..............................................................................#..........##.#............",
".#........#..........#..................#......................#...........#......................................................",
"....#.......................#...#...........................................#..................#...............................#..",
".............................#...........#..........#.................#.....................................................#.....",
"...........#.........#............#...............................#................#..............#.........................#.....",
"..........#........#.....#.....................................#.................#.....................................#..#.......",
"...#.......#...................................................................#.................#................................",
".#....#........#..............................#........#.....#........#..#...#.#......................#..........................#",
".....................................................................#....................#.......................................",
".............................#..............................#.#....................................................#............#.",
"..#.....#.......#.......#......................#.#.#.........................................................#.....#........#.....",
"...............#..........#..#....#..................#..........................................#.................................",
"............#...................#................#.............................................................................#..",
"........#...#......................................##....................#..................#..........##............#...#........",
"......................#......#......#.#.........................................................................#.............#...",
"........#......................................................................................#.................#................",
".................................................#....................#..............##.......................................#..#",
".............#..........................................................#.................#..........................#....#......#",
"......................#.....................#............................#..................#...........#.........................",
"#..............#...........................#...#.#................................................................................",
".......#............................#...........................................................#...............#.................",
"........................#..................................................................................#......................",
"...................#..........................#.........#........#...........................#....................................",
".............#............#.......................................................................................##....#.........",
"................#.........#.....................................................................................................#.",
"........#.............................#.................................#.......##..............#............................#....",
"#........#.....#.....#.......#...............................#....................................................#..............#",
"........................#.............................#.....#...........#........#............#...................................",
"..................#...........#...#.............................................................................#...............#.",
"...................#..................#...................#..............................#....#...........#..............#........",
"...............#................#.#....................#.........#.........#.............#.........#......#..................#....",
"..................#.............................#...........................#....#....#......#..#.#....................#..........",
"...#.......................................#...............................................................#................#.....",
"...................#.........................................................#....................................................",
".................#..............................#.................................................................................",
".............#.......#...#....................................................#........#....................................#...#.",
"..............#...................#.#..........#....................................................#....#...#.##....#............",
"........#..#...........................................#.........#...#...............#.........................#..................",
"#.....#...........................................#.................................................#.............................",
"#...........................................#..........#..........................................#...............#...............",
"............................#.................................................#...#...............................................",
".#...................#.......................................................................................#......#...##..#.....",
".....#..#...............#........#....#.........#........................#.............#..........................................",
"...................#................#........................................#.#..................................................",
"......#.#...........................#...................#..........#..........#......#............................................",
"..........................#.#..............#............#.#.......................................................................",
"...#..#........................#..............................................#..#...#.....#........#.............................",
"..........................#.....................#.........................................................#............#.#........",
"............................#.....................#.............#.................................................................",
"..........................................#..#.................................................................#......#.#.#.......",
"..........##......................................#................................##....................#..#.....................",
"..............#.......................................................#...........................................................",
"..........#........#........................................................................................#........#...#........",
"......................#.#...................#...............#.....#......................#.....#.......#.......#..........#.......",
"......#..#....#..................#.........................................#......................................................",
"...............#.....#..#..........................................##.........................................##.............#....",
".....................#..................#..................................#...................#............................#.#...",
"..#................#..#................................................#...........#..........#.............#...................#.",
".......#.............#.......................................................................#...#.........................##..#..",
"...#...................#..................#.............#..#.........................................#........##..................",
".................................#...........#........#.....................#.........................#..#........................",
".......#..................#..................................#......................................#.#....................#......",
"..................................................................................#...........#....#.......#......#..........#....",
"........##.........................................................#.......................#........#............#................",
"...#...............##.#..................#....................................#.............#.................#...................",
"..................##.........#...................#......#................#......................................................#.",
".#....................#............#..............#.............#.........#........................................#......#..#....",
"...............#...........................................................#........................#.............#...............",
"#............................#...................#...............................##..#...............#..........................#.",
"................#.............#..........#.........#..........................#....#..............................#..............#",
"...................................#.........................................#....................................................",
"....#................................................................#.#..#..........#....#.............................#.........",
"...........#.............#..........#........#...#...#........#.............#.......................................##............",
".........#.......................#..........#....#.......................................#.....#...#.#..........#.................",
".......................#...........#.......#......#.#...............................................#.................#.#........."
};




/*std::string testMap[] = {
    "....#.....",
    ".........#",
    "..........",
    "..#.......",
    ".......#..",
    "..........",
    ".#..^.....",
    "........#.",
    "#.........",
    "......#..."
};

std::string testMapPart2[] = {
    "....#.....",
    ".........#",
    "..........",
    "..#.......",
    ".......#..",
    "..........",
    ".#..^.....",
    "........#.",
    "#.........",
    "......#..."
};*/

int Part1() {
    int total = 0;
    std::string mapStrip;
    // Guard Coordinates stored as X, Y with 0,0 in the top left corner
    int guardCoordinates[2] = {0,0};

    // Find the width and height of the map
    int mapHeight = sizeof(testMap) / sizeof(testMap[0]);
    int mapWidth = testMap[0].length();
    int guardOrientation = 0;

    //Find the guard in the array
    for (int i = 0; i < mapHeight; i++) {
        mapStrip = testMap[i];
        for (int j = 0; j < mapWidth; j++) {
            if (mapStrip[j] == '^') {
                guardCoordinates[0] = j;
                guardCoordinates[1] = i;
            }
        }
    }
    //While guard coordinates within the map, move the guard around (x first then y)
    while ((guardCoordinates[0] >= 0 && guardCoordinates[0] < mapWidth) && (guardCoordinates[1] >= 0 && guardCoordinates[1] < mapHeight)) {
        // Replaces the guard's current postion with an X
        mapStrip = testMap[guardCoordinates[1]];
        mapStrip[guardCoordinates[0]] = 'X';
        testMap[guardCoordinates[1]] = mapStrip;

        // Guard facing upwards
        if (guardOrientation == 0) {
            guardCoordinates[1] -= 1;
            if (guardCoordinates[1] >= 0) {
                mapStrip = testMap[guardCoordinates[1]];
                if (mapStrip[guardCoordinates[0]] == '#') {
                    guardOrientation = 1;
                    guardCoordinates[1] += 1;
                }
                else {
                    mapStrip[guardCoordinates[0]] = '^';
                    testMap[guardCoordinates[1]] = mapStrip;
                }
            }
        }

        // Guard facing right
        else if (guardOrientation == 1) {
            guardCoordinates[0] += 1;
            if (guardCoordinates[0] < mapWidth) {
                mapStrip = testMap[guardCoordinates[1]];
                if (mapStrip[guardCoordinates[0]] == '#') {
                    guardOrientation = 2;
                    guardCoordinates[0] -= 1;
                }
                else {
                    mapStrip[guardCoordinates[0]] = '^';
                    testMap[guardCoordinates[1]] = mapStrip;
                }
            }
        }

        // Guard facing downwards
        else if (guardOrientation == 2) {
            guardCoordinates[1] += 1;
            if (guardCoordinates[1] < mapHeight) {
                mapStrip = testMap[guardCoordinates[1]];
                if (mapStrip[guardCoordinates[0]] == '#') {
                    guardOrientation = 3;
                    guardCoordinates[1] -= 1;
                }
                else {
                    mapStrip[guardCoordinates[0]] = '^';
                    testMap[guardCoordinates[1]] = mapStrip;
                }
            }
        }

        // Guard facing left
        else if (guardOrientation == 3) {
            guardCoordinates[0] -= 1;
            if (guardCoordinates[0] >= 0) {
                mapStrip = testMap[guardCoordinates[1]];
                if (mapStrip[guardCoordinates[0]] == '#') {
                    guardOrientation = 0;
                    guardCoordinates[0] += 1;
                }
                else {
                    mapStrip[guardCoordinates[0]] = '^';
                    testMap[guardCoordinates[1]] = mapStrip;
                }
            }
        }
    }

    //Count how many X's in the map
    for (int i = 0; i < mapHeight; i++) {
        mapStrip = testMap[i];
        for (int j = 0; j < mapWidth; j++) {
            if (mapStrip[j] == 'X') {
                total++;
            }
        }
    }

    return total;
}

bool CheckForValidCycles() {
    bool loopFound = false;
    bool guardTurned = true;
    int total = 0;
    std::string mapStrip;
    std::vector<int> pastPostions;
    std::map<std::tuple<int, int, int>, int> pastPostionsMap;
    // Guard Coordinates stored as X, Y with 0,0 in the top left corner
    int guardCoordinates[2] = { 0,0 };

    // Find the width and height of the map
    int mapHeight = sizeof(testMap) / sizeof(testMap[0]);
    int mapWidth = testMap[0].length();
    int guardOrientation = 0;

    //Find the guard in the array
    for (int i = 0; i < mapHeight; i++) {
        std::string &mapStrip = testMapPart2[i];
        for (int j = 0; j < mapWidth; j++) {
            if (mapStrip[j] == '^') {
                guardCoordinates[0] = j;
                guardCoordinates[1] = i;
            }
        }
    }
    //While guard coordinates within the map, move the guard around (x first then y) If the guard turns, we store his position in the array pastPositions
    while (((guardCoordinates[0] >= 0 && guardCoordinates[0] < mapWidth) && (guardCoordinates[1] >= 0 && guardCoordinates[1] < mapHeight)) && loopFound == false) {

        // Guard facing upwards
        if (guardOrientation == 0) {
            guardCoordinates[1] -= 1;
            if (guardCoordinates[1] >= 0) {
                std::string& mapStrip = testMapPart2[guardCoordinates[1]];
                if (mapStrip[guardCoordinates[0]] == '#') {
                    guardOrientation = 1;
                    guardCoordinates[1] += 1;
                    guardTurned = true;
                }
                else {
                    testMapPart2[guardCoordinates[1]] = mapStrip;
                }
            }
        }

        // Guard facing right
        else if (guardOrientation == 1) {
            guardCoordinates[0] += 1;
            if (guardCoordinates[0] < mapWidth) {
                std::string& mapStrip = testMapPart2[guardCoordinates[1]];
                if (mapStrip[guardCoordinates[0]] == '#') {
                    guardOrientation = 2;
                    guardCoordinates[0] -= 1;
                    guardTurned = true;
                }
                else {
                    testMapPart2[guardCoordinates[1]] = mapStrip;
                }
            }
        }

        // Guard facing downwards
        else if (guardOrientation == 2) {
            guardCoordinates[1] += 1;
            if (guardCoordinates[1] < mapHeight) {
                std::string& mapStrip = testMapPart2[guardCoordinates[1]];
                if (mapStrip[guardCoordinates[0]] == '#') {
                    guardOrientation = 3;
                    guardCoordinates[1] -= 1;
                    guardTurned = true;
                }
                else {
                    testMapPart2[guardCoordinates[1]] = mapStrip;
                }
            }
        }

        // Guard facing left
        else if (guardOrientation == 3) {
            guardCoordinates[0] -= 1;
            if (guardCoordinates[0] >= 0) {
                std::string& mapStrip = testMapPart2[guardCoordinates[1]];
                if (mapStrip[guardCoordinates[0]] == '#') {
                    guardOrientation = 0;
                    guardCoordinates[0] += 1;
                    guardTurned = true;
                }
                else {
                    testMapPart2[guardCoordinates[1]] = mapStrip;
                }
            }
        }

        if (guardTurned == true) {
            // Iterate through each past position and check if the guard has already been in the same position with the same orientation
            /*for (int i = 0; i < pastPostions.size(); i += 3) {
                if ((pastPostions[i] == guardCoordinates[0])) {
                    if ((pastPostions[i + 1] == guardCoordinates[1])) {
                        if (pastPostions[i + 2] == guardOrientation) {
                            loopFound = true;
                        }
                    }
                }
            }
            pastPostions.push_back(guardCoordinates[0]);
            pastPostions.push_back(guardCoordinates[1]);
            pastPostions.push_back(guardOrientation);*/

            if (pastPostionsMap.contains(std::make_tuple(guardCoordinates[0], guardCoordinates[1], guardOrientation))) {
                loopFound = true;
            }

            pastPostionsMap[std::make_tuple(guardCoordinates[0], guardCoordinates[1], guardOrientation)] = 1;

        }

    }

    return loopFound;
}

int Part2() {
    int value = 0;
    bool loopFound;

    for (int i = 0; i < (sizeof(testMap) / sizeof(testMap[0])); i++) {
        std::string& mapStrip = testMap[i];
        std::string& mapStripPart2 = testMapPart2[i];
        for (int j = 0; j < mapStrip.length(); j++) {
            if (mapStrip[j] == 'X' && (mapStripPart2[j] != '^')) {
                //Using the input from the last function, we decide wheter we need to check the poition or not 3, 6
                if (i == 7 && j == 6) {
                    std::cout << "";
                }
                mapStripPart2[j] = '#';
                testMapPart2[i] = mapStripPart2;
                loopFound = CheckForValidCycles();
                mapStripPart2[j] = '.';
                testMapPart2[i] = mapStripPart2;
                
                if (loopFound) {
                    value++;
                    loopFound = false;
                    std::cout << value << "\n";
                }
            }
        }
    }

    return value;
}

// Program

int main()
{
    int value = Part1();
    std::cout << "The guard goes to " << value << " positions before leaving the map\n";
    value = Part2();
    std::cout << "There are " << value << " positions to place an obstacle to cause the guard to enter a loop\n";

    return 0;
}


/* Record all previous locations the guard has been in(with orientaion)
If the guard reaches the same location with the same orientation as before, we can deduce that he must be stuck in a loop
By placing an obsticle in every possible postion and checking for loops, we can determine how many possible loops exist
Do this by:
Placing an obsticle in a given position (start at zero zero and move across then down) (if obsticle already present, skip and go to next position)
Run through the algorithm to check for loops
If no loops are present, ignore the index
If a loop occurs, add one to the running total
Go to the next coordinate
This solution is definately going to work, but will require the pathfinding algorithm to be run a 16,000 times which doesn't feel very efficient
This is a stupid idea. Do I hate my computer or something? Almost 200KiB of memory and over 19,000^2 operations
*/


/* Concept of a plan:
The distances between the obstacles doesn't matter, only whether they are or aren't there (since the guard will continue till he hits an obstacle)
However some information about the position of a guard will have to be recorded in order to check if there is a cycle or not
We can reduce the number of positions we need to store by storing exclusively the guard's position when hitting an obstacle and their orientation
This reduces the complexity of the above algorithm significantly
We also only need to check the squares in the guard's original path since every other path is unnecessary

*/